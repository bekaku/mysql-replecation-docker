# version: '3.8'

services:
  mysql-master:
    image: mysql:9.4
    container_name: mysql-master
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-appdb}
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-secure_password}
      MYSQL_REPLICATION_USER: replicator
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD:-repl_password}
    volumes:
      - mysql-master-data:/var/lib/mysql
      - ./master/conf.d:/etc/mysql/conf.d:ro
      - ./master/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "3306:3306"
    networks:
      - mysql-replication
    # command: 
    #   - --server-id=1
    #   - --log-bin=mysql-bin
    #   - --binlog-format=ROW
    #   - --gtid-mode=ON
    #   - --enforce-gtid-consistency=ON
    #   - --log-slave-updates=ON
    #   - --binlog-expire-logs-seconds=604800
    #   - --max-binlog-size=100M
    #   - --binlog-do-db=${MYSQL_DATABASE:-appdb}
    #   - --max-connections=500
    #   - --max-allowed-packet=256M
    #   - --innodb-buffer-pool-size=1G
    #   - --innodb-flush-log-at-trx-commit=1
    #   - --sync-binlog=1
    #   - --mysqlx=OFF
    #   - --performance-schema=ON
    #   - --slow-query-log=1
    #   - --long-query-time=2
    #   - --log-error-verbosity=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-secure_root_password}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  mysql-slave:
    image: mysql:9.4
    container_name: mysql-slave
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-appdb}
      MYSQL_MASTER_HOST: mysql-master
      MYSQL_MASTER_PORT: 3306
      MYSQL_REPLICATION_USER: replicator
      MYSQL_REPLICATION_PASSWORD: ${MYSQL_REPLICATION_PASSWORD:-repl_password}
    volumes:
      - mysql-slave-data:/var/lib/mysql
      - ./slave/conf.d:/etc/mysql/conf.d:ro
      - ./slave/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "3307:3306"
    networks:
      - mysql-replication
    depends_on:
      mysql-master:
        condition: service_healthy
    # command:
    #   - --server-id=2
    #   - --log-bin=mysql-bin
    #   - --binlog-format=ROW
    #   - --gtid-mode=ON
    #   - --enforce-gtid-consistency=ON
    #   - --log-slave-updates=ON
    #   - --read-only=ON
    #   - --super-read-only=ON
    #   - --skip-replica-start
    #   - --relay-log=relay-bin
    #   - --relay-log-recovery=ON
    #   - --binlog-expire-logs-seconds=604800
    #   - --max-connections=500
    #   - --max-allowed-packet=256M
    #   - --innodb-buffer-pool-size=1G
    #   - --mysqlx=OFF
    #   - --performance-schema=ON
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-secure_root_password}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  # Optional: MySQL Router for load balancing (MySQL 9.4 feature)
  # mysql-router:
  #   image: mysql/mysql-router:9.4
  #   container_name: mysql-router
  #   restart: unless-stopped
  #   environment:
  #     MYSQL_HOST: mysql-master
  #     MYSQL_PORT: 3306
  #     MYSQL_USER: root
  #     MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD:-secure_root_password}
  #     MYSQL_INNODB_CLUSTER_MEMBERS: 1
  #   ports:
  #     - "6446:6446"  # Read-Write port
  #     - "6447:6447"  # Read-Only port
  #   networks:
  #     - mysql-replication
  #   depends_on:
  #     mysql-master:
  #       condition: service_healthy
  #     mysql-slave:
  #       condition: service_healthy
  #   profiles:
  #     - router

volumes:
  mysql-master-data:
    driver: local
  mysql-slave-data:
    driver: local

networks:
  mysql-replication:
    driver: bridge